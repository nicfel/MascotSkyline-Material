j==1
j=1
j=7
nr.events[1,true.labels[[j]]]
rue.vals[1,true.labels[[j]]]
true.vals[1,true.labels[[j]]]
true.labels[[j]]
est.labels
gsub("bmig", "mig", est.labels)
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
gsub("bmig", "mig", est.labels)true.labels
true.labels
true.labels
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
true.labels
true.labels[[j]]
j=7
true.labels[[j]]
ind = which(est.labels==true.labels[[j]])
ind
est.labels
est.labels = gsub("_to", "", est.labels)
ind = which(est.labels==true.labels[[j]])
ind
est.labels
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
true.labels[[j]]
nr.events[1,true.labels[[j]]]
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
rates[,true.labels[[j]]]
true.labels[[j]]
rate.vals.ori = rates[,est.labels_match[[ind]]]
rate.vals.ori = rates[,est.labels[[ind]]]
rate.vals.ori
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
con <- file(paste(fname, "txt", sep="."), "r", blocking = FALSE)
readLines(con) # empty
strsplit(con[[5]])
lines = readLines(con)
strsplit(lines[[5]])
lines
con <- file(paste(fname, "txt", sep="."), "r", blocking = FALSE)
lines = readLines(con)
strsplit(lines[[5]])
lines[[5]]
strsplit(lines[[5]], split=" ")
strsplit(lines[[5]], split=" ")[[1]][[2]]
length(strsplit(lines[[5]], split=" ")[[1]])
lines[[length(lines)]]
lines[[length(lines)]]
strsplit(lines[[length(lines)]], split=" ")[[1]]
nr_loci = as.numeric(strsplit(lines[[length(lines)]], split=" ")[[1]][[3]])
nr_loci
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
values
p = ggplot(values)+
geom_errorbar(aes(x=true,ymin=lower,ymax=upper), color="grey")+
geom_point(aes(x=true,y=mean))+
geom_abline(color="red")+
ylab("estimated")+
xlab("simulated")+
facet_wrap(param~., scales="free", labeller = labeller(param = facet.header)) +
theme_light()+
scale_x_log10() + scale_y_log10()
plot(p)
p = ggplot(values)+
geom_errorbar(aes(x=true,ymin=lower,ymax=upper), color="grey")+
geom_point(aes(x=true,y=mean, color = nr_sammples))+
geom_abline(color="red")+
ylab("estimated")+
xlab("simulated")+
facet_wrap(param~., scales="free", labeller = labeller(param = facet.header)) +
theme_light()+
scale_x_log10() + scale_y_log10()
plot(p)
p = ggplot(values)+
geom_errorbar(aes(x=true,ymin=lower,ymax=upper), color="grey")+
geom_point(aes(x=true,y=mean, color = nr_samples))+
geom_abline(color="red")+
ylab("estimated")+
xlab("simulated")+
facet_wrap(param~., scales="free", labeller = labeller(param = facet.header)) +
theme_light()+
scale_x_log10() + scale_y_log10()
plot(p)
p = ggplot(values)+
geom_errorbar(aes(x=true,ymin=lower,ymax=upper), color="grey")+
geom_point(aes(x=true,y=mean, color = nr_samples))+
geom_abline(color="red")+
ylab("estimated")+
xlab("simulated")+
facet_wrap(param~nr_samples, scales="free", labeller = labeller(param = facet.header)) +
theme_light()+
scale_x_log10() + scale_y_log10()
plot(p)
p = ggplot(values)+
geom_errorbar(aes(x=true,ymin=lower,ymax=upper), color="grey")+
geom_point(aes(x=true,y=mean, color = nr_loci))+
geom_abline(color="red")+
ylab("estimated")+
xlab("simulated")+
facet_wrap(param~nr_samples, scales="free", labeller = labeller(param = facet.header)) +
theme_light()+
scale_x_log10() + scale_y_log10()
plot(p)
p.zeros = ggplot(values.zeros)+
geom_histogram(aes(x=post), color="grey")+
geom_vline(xintercept=0.05, color="red")+
theme_light() +
scale_y_log10()+
xlab("posterior support for gene flow")
plot(p.zeros)
p.zeros = ggplot(values.zeros)+
geom_histogram(aes(x=post), color="grey")+
geom_vline(xintercept=0.25, color="red")+
theme_light() +
scale_y_log10()+
xlab("posterior support for gene flow")
plot(p.zeros)
events.vals = values[which(values$nrevents>0), ]
p.events = ggplot(events.vals, aes(x=nrevents*nr_loci,y=post))+
geom_count()+
theme_light() +
ylab("posterior support for gene flow") +
xlab("number of migration events") +
scale_x_continuous(limits=c(0,2))+
scale_y_continuous(limits=c(0,1.2))+
geom_smooth(method = "loess", se = T)
plot(p.events)
max(nrevents*nr_loci)
max(values$nrevents*values$nr_loci)
max(events.vals$nrevents*events.vals$nr_loci)
events.vals = values[which(values$nrevents>0), ]
p.events = ggplot(events.vals, aes(x=nrevents*nr_loci,y=post))+
geom_count()+
theme_light() +
ylab("posterior support for gene flow") +
xlab("number of migration events") +
# scale_x_continuous(limits=c(0,2))+
scale_y_continuous(limits=c(0,1.2))+
geom_smooth(method = "loess", se = T)
plot(p.events)
p.events = ggplot(events.vals, aes(x=nrevents*nr_loci,y=post))+
geom_count()+
theme_light() +
ylab("posterior support for gene flow") +
xlab("number of migration events") +
# scale_x_continuous(limits=c(0,2))+
scale_y_continuous(limits=c(0,1.2))+
geom_hline(yintercept=0.25, color="red")+
geom_smooth(method = "loess", se = T)
plot(p.events)
p.events = ggplot(events.vals, aes(x=nrevents*nr_loci,y=post))+
geom_count()+
theme_light() +
ylab("posterior support for gene flow") +
xlab("number of migration events") +
scale_x_continuous(limits=c(0,40))+
scale_y_continuous(limits=c(0,1.2))+
geom_hline(yintercept=0.25, color="red")+
geom_smooth(method = "loess", se = T)
plot(p.events)
p.events = ggplot(events.vals, aes(x=nrevents*nr_loci,y=post))+
geom_count()+
theme_light() +
ylab("posterior support for gene flow") +
xlab("number of migration events") +
scale_x_continuous(limits=c(0,40))+
scale_y_continuous(limits=c(0,1.2))+
geom_hline(yintercept=0.25, color="red")+
geom_smooth(method = "loess", se = T) +
facet_wrap(param~nr_samples, scales="free")
plot(p.events)
p.events = ggplot(events.vals, aes(x=nrevents*nr_loci,y=post))+
geom_count()+
theme_light() +
ylab("posterior support for gene flow") +
xlab("number of migration events") +
scale_x_continuous(limits=c(0,40))+
scale_y_continuous(limits=c(0,1.2))+
geom_hline(yintercept=0.25, color="red")+
geom_smooth(method = "loess", se = T) +
facet_wrap(nr_loci~nr_samples, scales="free")
plot(p.events)
p.events = ggplot(events.vals, aes(x=nrevents*nr_loci,y=post))+
geom_count()+
theme_light() +
ylab("posterior support for gene flow") +
xlab("number of migration events") +
scale_x_continuous(limits=c(0,40))+
scale_y_continuous(limits=c(0,1.2))+
geom_hline(yintercept=0.25, color="red")+
geom_smooth(method = "loess", se = T, group=nr_loci)
plot(p.events)
p.events = ggplot(events.vals, aes(x=nrevents*nr_loci,y=post))+
geom_count()+
theme_light() +
ylab("posterior support for gene flow") +
xlab("number of migration events") +
scale_x_continuous(limits=c(0,40))+
scale_y_continuous(limits=c(0,1.2))+
geom_hline(yintercept=0.25, color="red")+
geom_smooth(method = "loess", se = T, color=nr_loci)
plot(p.events)
events.vals = values[which(values$nrevents>0), ]
p.events = ggplot(events.vals, aes(x=nrevents*nr_loci,y=post, color=nr_loci))+
geom_count()+
theme_light() +
ylab("posterior support for gene flow") +
xlab("number of migration events") +
scale_x_continuous(limits=c(0,40))+
scale_y_continuous(limits=c(0,1.2))+
geom_hline(yintercept=0.25, color="red")+
geom_smooth(method = "loess", se = T)
plot(p.events)
events.vals = values[which(values$nrevents>0), ]
events.vals$nr_loci = as.character(events.vals$nr_loci)
p.events = ggplot(events.vals, aes(x=nrevents*nr_loci,y=post, color=nr_loci))+
geom_count()+
theme_light() +
ylab("posterior support for gene flow") +
xlab("number of migration events") +
scale_x_continuous(limits=c(0,40))+
scale_y_continuous(limits=c(0,1.2))+
geom_hline(yintercept=0.25, color="red")+
geom_smooth(method = "loess", se = T)
plot(p.events)
events.vals = values[which(values$nrevents>0), ]
events.vals$nr_loci_name = as.character(events.vals$nr_loci)
p.events = ggplot(events.vals, aes(x=nrevents*nr_loci,y=post, color=nr_loci_name))+
geom_count()+
theme_light() +
ylab("posterior support for gene flow") +
xlab("number of migration events") +
scale_x_continuous(limits=c(0,40))+
scale_y_continuous(limits=c(0,1.2))+
geom_hline(yintercept=0.25, color="red")+
geom_smooth(method = "loess", se = T)
plot(p.events)
events.vals = values[which(values$nrevents>0), ]
events.vals$nr_loci_name = as.character(events.vals$nr_loci)
p.events = ggplot(events.vals, aes(x=nrevents*nr_loci,y=post, color=nr_loci_name))+
geom_count()+
theme_light() +
ylab("posterior support for gene flow") +
xlab("number of migration events") +
scale_x_continuous(limits=c(0,40))+
scale_y_continuous(limits=c(0,1.2))+
geom_hline(yintercept=0.25, color="red")+
geom_smooth(method = "loess", se = F)
plot(p.events)
events.vals = values[which(values$nrevents>0), ]
events.vals$nr_loci_name = as.character(events.vals$nr_loci)
p.events = ggplot(events.vals, aes(x=nrevents*nr_loci,y=post))+
geom_count()+
theme_light() +
ylab("posterior support for gene flow") +
xlab("number of migration events") +
scale_x_continuous(limits=c(0,40))+
scale_y_continuous(limits=c(0,1.2))+
geom_hline(yintercept=0.25, color="red")+
geom_smooth(method = "loess", se = F, color=nr_loci_name, fill=nr_loci_name)
plot(p.events)
p.events = ggplot(events.vals, aes(x=nrevents*nr_loci,y=post))+
geom_count()+
theme_light() +
ylab("posterior support for gene flow") +
xlab("number of migration events") +
scale_x_continuous(limits=c(0,40))+
scale_y_continuous(limits=c(0,1.2))+
geom_hline(yintercept=0.25, color="red")+
geom_smooth(method = "loess", se = T, color=nr_loci_name, fill=nr_loci_name)
plot(p.events)
events.vals = values[which(values$nrevents>0), ]
events.vals$nr_loci_name = as.character(events.vals$nr_loci)
p.events = ggplot(events.vals, aes(x=nrevents*nr_loci,y=post))+
geom_count()+
theme_light() +
ylab("posterior support for gene flow") +
xlab("number of migration events") +
scale_x_continuous(limits=c(0,40))+
scale_y_continuous(limits=c(0,1.2))+
geom_hline(yintercept=0.25, color="red")+
geom_smooth(method = "loess", se = T, color=nr_loci_name, fill=nr_loci_name)
plot(p.events)
events.vals = values[which(values$nrevents>0), ]
events.vals$nr_loci_name = as.character(events.vals$nr_loci)
p.events = ggplot(events.vals, aes(x=nrevents*nr_loci,y=post, color=nr_loci_name, fill=nr_loci_name))+
geom_count(aes(color="black"))+
theme_light() +
ylab("posterior support for gene flow") +
xlab("number of migration events") +
scale_x_continuous(limits=c(0,40))+
scale_y_continuous(limits=c(0,1.2))+
geom_hline(yintercept=0.25, color="red")+
geom_smooth(method = "loess", se = T)
plot(p.events)
events.vals = values[which(values$nrevents>0), ]
events.vals$nr_loci_name = as.character(events.vals$nr_samples)
p.events = ggplot(events.vals, aes(x=nrevents*nr_loci,y=post, color=nr_loci_name, fill=nr_loci_name))+
geom_count(aes(color="black"))+
theme_light() +
ylab("posterior support for gene flow") +
xlab("number of migration events") +
scale_x_continuous(limits=c(0,40))+
scale_y_continuous(limits=c(0,1.2))+
geom_hline(yintercept=0.25, color="red")+
geom_smooth(method = "loess", se = T)
plot(p.events)
events.vals$nr_loci_name = as.character(events.vals$nr_samples)
p.events = ggplot(events.vals, aes(x=nrevents*nr_loci,y=post, color=nr_loci_name, fill=nr_loci_name))+
geom_count(color="black")+
theme_light() +
ylab("posterior support for gene flow") +
xlab("number of migration events") +
scale_x_continuous(limits=c(0,40))+
scale_y_continuous(limits=c(0,1.2))+
geom_hline(yintercept=0.25, color="red")+
geom_smooth(method = "loess", se = T)
plot(p.events)
events.vals = values[which(values$nrevents>0), ]
events.vals$nr_loci_name = as.character(events.vals$nr_species)
p.events = ggplot(events.vals, aes(x=nrevents*nr_loci,y=post, color=nr_loci_name, fill=nr_loci_name))+
geom_count(color="black")+
theme_light() +
ylab("posterior support for gene flow") +
xlab("number of migration events") +
scale_x_continuous(limits=c(0,40))+
scale_y_continuous(limits=c(0,1.2))+
geom_hline(yintercept=0.25, color="red")+
geom_smooth(method = "loess", se = T)
plot(p.events)
p = ggplot(values)+
geom_errorbar(aes(x=true,ymin=lower,ymax=upper), color="grey")+
geom_point(aes(x=true,y=mean, color = nr_loci))+
geom_abline(color="red")+
ylab("estimated")+
xlab("simulated")+
facet_wrap(param~nr_samples, scales="free", labeller = labeller(param = facet.header)) +
theme_light()+
scale_x_log10() +
scale_y_log10()
plot(p)
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
true.labels[[j]]
tmp
j=4
tmp = strsplit(true.labels[[j]], split="_")
tmp
grpl(true.labels[[j]], ".")
grepl(true.labels[[j]], ".")
grep(true.labels[[j]], ".")
grep(true.labels[[j]], "\\.")
true.labels[[j]]
grep(true.labels[[j]], ".")
grepl(true.labels[[j]], ".")
grepl(true.labels[[j]], "\\.")
grepl(true.labels[[j]], "\\\.")
grepl(true.labels[[j]], "\.")
grepl(true.labels[[j]], "\\.")
grepl("\\.", true.labels[[j]])
grep("\\.", true.labels[[j]])
true.labels[[j]]
grep("\\.", true.labels[[j]])
grep("\\N", true.labels[[j]])
grep("\\A", true.labels[[j]])
grep("A", true.labels[[j]])
grep("b", true.labels[[j]])
grepl("_", true.labels[[j]])
grep(".", true.labels[[j]], fixed=T)
grep("\\.", true.labels[[j]], fixed=T)
grep(".", true.labels[[j]], fixed=T)
p = ggplot(values)+
geom_errorbar(aes(x=true,ymin=lower,ymax=upper), color="grey")+
geom_point(aes(x=true,y=mean, color = nr_events))+
geom_abline(color="red")+
ylab("estimated")+
xlab("simulated")+
facet_wrap(param~nr_samples, scales="free", labeller = labeller(param = facet.header)) +
theme_light()+
scale_x_log10() +
scale_y_log10()
plot(p)
true.labels[[j]]
grep(".", true.labels[[j]])
grep(".", true.labels[[j]][[1]])
grep(".", true.labels[[j]])
true.labels[[j]]
true.labels[[j]]
grep(".", true.labels[[j]])
grep("A", true.labels[[j]])
gregexpr
gregexpr(".", ,true.labels[[j]])
gregexpr(".", true.labels[[j]])
gregexpr("\\.", true.labels[[j]])
gregexpr("\\.", true.labels[[j]])[[1]]
length(gregexpr("\\.", true.labels[[j]])[[1]])
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
length(gregexpr("\\.", true.labels[[j]])[[1]])values
values
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
level
gregexpr("\\.", true.labels[[j]])[[1]]
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
level
gregexpr("\\.", true.labels[[j]])[[1]]
gregexpr("\\.", true.labels[[j]])[[1]][[1]]
gregexpr("\\.", true.labels[[j]])[[1]][[1]]>0
length(gregexpr("\\.", true.labels[[j]])[[1]][[1]]>0)
sum(gregexpr("\\.", true.labels[[j]])[[1]][[1]]>0)
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
values
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
j=4
true.labels[[j]]
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
j=4
true.labels[[j]]
gregexpr("\\.", true.labels[[j]])[[1]][[1]]
gregexpr("\\.", true.labels[[j]])[[1]]
gregexpr("\\.", true.labels[[j]])[[1]]>0
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
values
source('~/Documents/github/IsolationWithMigration/Simulation/ESS/scripts/plotRates.R')
p = ggplot(values)+
geom_errorbar(aes(x=true,ymin=lower,ymax=upper), color="grey")+
geom_point(aes(x=true,y=mean, color = level))+
geom_abline(color="red")+
ylab("estimated")+
xlab("simulated")+
facet_wrap(param~nr_samples, scales="free", labeller = labeller(param = facet.header)) +
theme_light()+
scale_x_log10() +
scale_y_log10()
plot(p)
values$extant = values$level==1
\
values$extant = values$level==1
values$extant = values$level==1
p = ggplot(values)+
geom_errorbar(aes(x=true, ymin=lower, ymax=upper), color="grey")+
geom_point(aes(x=true, y=mean, color = extant))+
geom_abline(color="red")+
ylab("estimated")+
xlab("simulated")+
facet_wrap(param~nr_samples, scales="free", labeller = labeller(param = facet.header)) +
theme_light()+
scale_x_log10() +
scale_y_log10()
plot(p)
p = ggplot(values[which(values$param=="Ne"),])+
geom_errorbar(aes(x=true, ymin=lower, ymax=upper), color="grey")+
geom_point(aes(x=true, y=mean, color = extant))+
geom_abline(color="red")+
ylab("estimated")+
xlab("simulated")+
facet_wrap(param~nr_samples, scales="free", labeller = labeller(param = facet.header)) +
theme_light()+
scale_x_log10() +
scale_y_log10()
plot(p)
p = ggplot(values[which(values$param=="Ne"),])+
geom_errorbar(aes(x=true, ymin=lower, ymax=upper), color="grey")+
geom_point(aes(x=true, y=mean, color = extant))+
geom_abline(color="red")+
ylab("estimated")+
xlab("simulated")+
facet_wrap(nr_loci~nr_samples, scales="free", labeller = labeller(param = facet.header)) +
theme_light()+
scale_x_log10() +
scale_y_log10()
plot(p)
events.vals = values[which(values$nrevents>0), ]
events.vals$nr_loci_name = as.character(events.vals$nr_species)
p.events = ggplot(events.vals, aes(x=nrevents*nr_loci,y=post, color=nr_loci_name, fill=nr_loci_name))+
geom_count(color="black")+
theme_light() +
ylab("posterior support for gene flow") +
xlab("number of migration events") +
scale_x_continuous(limits=c(0,40))+
scale_y_continuous(limits=c(0,1.2))+
geom_hline(yintercept=0.25, color="red")+
geom_smooth(method = "loess", se = T)
plot(p.events)
events.vals = values[which(values$nrevents>0), ]
events.vals$nr_loci_name = as.character(events.vals$nr_loci)
p.events = ggplot(events.vals, aes(x=nrevents*nr_loci,y=post, color=nr_loci_name, fill=nr_loci_name))+
geom_count(color="black")+
theme_light() +
ylab("posterior support for gene flow") +
xlab("number of migration events") +
scale_x_continuous(limits=c(0,40))+
scale_y_continuous(limits=c(0,1.2))+
geom_hline(yintercept=0.25, color="red")+
geom_smooth(method = "loess", se = T)
plot(p.events)
source('~/Documents/github/MascotSkyline-Material/Simulations/Skygrid/plotScalers.R')
source('~/Documents/github/MascotSkyline-Material/Simulations/Exponential/plotScalers.R')
source('~/Documents/github/MascotSkyline-Material/Simulations/Logistic/plotScalers.R')
source('~/Documents/github/MascotSkyline-Material/Simulations/Unstructured/plotComparison.R')
