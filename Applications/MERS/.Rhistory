biocLite("ggtree")
source("https://bioconductor.org/biocLite.R")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
BiocManager::install("ggtree")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
library(treeio)
library(ggtree)
summary(cars)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
library(treeio)
library(ggtree)
tree = read.beast("./H3N2.mcc.tree")
library(treeio)
library(ggtree)
tree = read.beast("./H3N2.mcc.tree")
library(treeio)
library(ggtree)
tree = read.beast("./H3N2.mcc.tree")
ggtree(tree)
ggtree(tree) + theme_tree2()
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
library(treeio)
library(ggtree)
tree = read.beast("./H3N2.mcc.tree")
ggtree(tree)
ggtree(tree) + theme_tree2(mrsi="2001-12-31")
ggtree(tree,mrsd="2001-12-31") + theme_tree2()
ggtree(tree,mrsd="2001-12-31") + theme_tree2() +
geom_tiplab(align=TRUE, linesize=.5)
ggtree(tree,mrsd="2001-12-31") + theme_tree2() +
geom_tiplab(align=TRUE, linesize=.5) +
xlim(1997,2005)
ggtree(tree,mrsd="2001-12-31") + theme_tree2() +
geom_tiplab(align=TRUE, linesize=.5) +
xlim(1997,2009)
ggtree(tree,mrsd="2001-12-31") + theme_tree2() +
geom_tiplab(align=TRUE, linesize=.5, fontsize=0.2) +
xlim(1997,2009)
ggtree(tree,mrsd="2001-12-31") + theme_tree2() +
geom_tiplab(align=TRUE, linesize=.5, size=0.2) +
xlim(1997,2009)
ggtree(tree,mrsd="2001-12-31") + theme_tree2() +
geom_tiplab(align=TRUE, linesize=.5, size=1) +
xlim(1997,2009)
ggtree(tree,mrsd="2001-12-31") + theme_tree2() +
geom_tiplab(align=TRUE, linesize=.5, size=2) +
xlim(1997,2009)
ggtree(tree,mrsd="2001-12-31", color=max) + theme_tree2() +
geom_tiplab(align=TRUE, linesize=.5, size=2) +
xlim(1997,2008)
locations = c("Hong_Kong", "New_York", "New_Zealand")
for (i in seq(1, length(tree@data$CAheight_0.95_HPD))){
probs = c(0,0,0)
for (j in seq(1,length(locations))){
print(tree@data[i, locations[j]])
}
}
ggtree(tree,mrsd="2001-12-31", color=max) + theme_tree2() +
geom_tiplab(align=TRUE, linesize=.5, size=2) +
xlim(1997,2008)
locations = c("Hong_Kong", "New_York", "New_Zealand")
for (i in seq(1, length(tree@data$CAheight_0.95_HPD))){
probs = c(0,0,0)
for (j in seq(1,length(locations))){
probs[j] = tree@data[i, locations[j]]
}
print(probs)
}
ggtree(tree,mrsd="2001-12-31", color=max) + theme_tree2() +
geom_tiplab(align=TRUE, linesize=.5, size=2) +
xlim(1997,2008)
locations = c("Hong_Kong", "New_York", "New_Zealand")
tree@data$location=c()
for (i in seq(1, length(tree@data$CAheight_0.95_HPD))){
probs = c(0,0,0)
for (j in seq(1,length(locations))){
probs[j] = tree@data[i, locations[j]]
}
tree@data[j, "location"] = locations[which.max(probs)]
}
ggtree(tree,mrsd="2001-12-31", color=location) + theme_tree2() +
geom_tiplab(align=TRUE, linesize=.5, size=2) +
xlim(1997,2008)
View(probs)
View(tree)
locations = c("Hong_Kong", "New_York", "New_Zealand")
tree@data$location=c()
for (i in seq(1, length(tree@data$CAheight_0.95_HPD))){
probs = c(0,0,0)
for (j in seq(1,length(locations))){
probs[j] = tree@data[i, locations[j]]
}
print(which.max(probs))
tree@data[j, "location"] = locations[which.max(probs)]
ds
}
locations = c("Hong_Kong", "New_York", "New_Zealand")
tree@data$location=c()
for (i in seq(1, length(tree@data$CAheight_0.95_HPD))){
probs = c(0,0,0)
for (j in seq(1,length(locations))){
probs[j] = tree@data[i, locations[j]]
}
print(which.max(probs))
tree@data[j, "location"] = as.character(locations[which.max(probs)])
ds
}
locations = c("Hong_Kong", "New_York", "New_Zealand")
tree@data$location=c()
for (i in seq(1, length(tree@data$CAheight_0.95_HPD))){
probs = c(0,0,0)
for (j in seq(1,length(locations))){
probs[j] = tree@data[i, locations[j]]
}
print(which.max(probs))
tree@data[j, "location"] = as.character(locations[which.max(probs)])
}
ggtree(tree,mrsd="2001-12-31", color=location) + theme_tree2() +
geom_tiplab(align=TRUE, linesize=.5, size=2) +
xlim(1997,2008)
locations = c("Hong_Kong", "New_York", "New_Zealand")
tree$location=c()
tree@data$location
View(tree)
locations = c("Hong_Kong", "New_York", "New_Zealand")
tree@data$location=c()
for (i in seq(1, length(tree@data$CAheight_0.95_HPD))){
probs = c(0,0,0)
for (j in seq(1,length(locations))){
probs[j] = tree@data[i, locations[j]]
}
tree@data[i, "location"] = as.character(locations[which.max(probs)])
}
ggtree(tree,mrsd="2001-12-31", color=location) + theme_tree2() +
geom_tiplab(align=TRUE, linesize=.5, size=2) +
xlim(1997,2008)
locations = c("Hong_Kong", "New_York", "New_Zealand")
tree@data$location=c()
for (i in seq(1, length(tree@data$CAheight_0.95_HPD))){
probs = c(0,0,0)
for (j in seq(1,length(locations))){
probs[j] = tree@data[i, locations[j]]
}
tree@data[i, "location"] = as.character(locations[which.max(probs)])
}
ggtree(tree,mrsd="2001-12-31", aes(color=host)) + theme_tree2() +
geom_tiplab(align=TRUE, linesize=.5, size=2) +
xlim(1997,2008)
locations = c("Hong_Kong", "New_York", "New_Zealand")
tree@data$location=c()
for (i in seq(1, length(tree@data$CAheight_0.95_HPD))){
probs = c(0,0,0)
for (j in seq(1,length(locations))){
probs[j] = tree@data[i, locations[j]]
}
tree@data[i, "location"] = as.character(locations[which.max(probs)])
}
ggtree(tree,mrsd="2001-12-31", aes(color=location)) + theme_tree2() +
geom_tiplab(align=TRUE, linesize=.5, size=2) +
xlim(1997,2008)
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
length(mascotlog)
headers = data.frame(number=seq(1,7),
title=c("10% of camel\n100% of human samples", "40% of camel\n100% of human samples", "70% of camel\n100% of human samples", "complete dataset", "100% of camel\n70% of human samples", "100% of camel\n40% of human samples", "100% of camel\n10% of human samples"));
headers$title
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
headers
p0 = do.call(grid.arrange, c(titels, nrow=1, ncol=7))
headers$title[ind]
ind
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
p0 = do.call(grid.arrange, c(titels, nrow=1, ncol=7))
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
p0 = do.call(grid.arrange, c(titels, nrow=1, ncol=7))
titels
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
p0 = do.call(grid.arrange, c(titels, nrow=1, ncol=7))
titels
titels[[1]]
titels[[2]]
titels[[3]]
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
plot(newtitles)
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
ggarrange
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
trends[[1]] = ggplot(data=headers[headers$number==ind, ]) +
geom_text(aes(x=0, y=0, label="Inferred Ne dynamics"), size=4)+
theme_void()+
theme(plot.margin = margin(0, 0, 0, 0, "cm"))
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
relative_widths <- c(1, 5, 5, 5, 5, 5, 5, 5)
# create a title plot
p0 = do.call(grid.arrange, c(titels, nrow=1, ncol=8, widths=relative_widths))
widths
relative_widths
length(relative_widths)
relative_widths <- c(1, 5, 5, 5, 5, 5, 5, 5)
# create a title plot
p0 = do.call(grid.arrange, c(titels, nrow=1, ncol=8, widths=relative_widths))
titels
length(titels)
p0 = do.call(grid.arrange, c(titels, nrow=1, ncol=8, widths=relative_widths))
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
plot(p_tot)
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Material/Applications/MERS/plotMERS.R")
ptrends
plot(ptrends)
p_tot = ggarrange(p0, p1,ptrends,p2, ncol = 1, heights=c(0.2,1,1,1))
ggsave(filename="../../../MascotSkyline-Text/Figures/mersnolo.pdf", plot=p_tot, height=8, width=20)
mcc_tree <- read.tree("./precooked_runs/ZIKV.mcc.trees")  # Change to your file path
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
# Read in the BEAST MCC tree
mcc_tree <- read.tree("./precooked_runs/ZIKV.mcc.trees")  # Change to your file path
# Read in the BEAST MCC tree
mcc_tree <- read.tree("/Users/nmueller/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/precooked_runs/ZIKV.mcc.trees")  # Change to your file path
mcc_tree
mcc_tree <- read.tree("/Users/nmueller/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/precooked_runs/ZIKV.mcc.trees")  # Change to your file path
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
mcc_tree
ggtree(mcc_tree)
ggtree(mcc_tree, color=max) +
ggtree(mcc_tree, color=max)
ggtree(mcc_tree, aes(color=max))
ggtree(mcc_tree, aes(color=max)) +
scale_color_manual(values = okabe_ito_scale)
okabe_ito_scale <- c("#F0E442",
"#0072B2", "#D55E00", "#CC79A7", "#999999")
# Read in the BEAST MCC tree
mcc_tree <- read.beast("/Users/nmueller/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/precooked_runs/ZIKV.mcc.trees")  # Change to your file path
# Assuming the tree has an annotation for locations in a format you can access,
# create a color vector matching locations to colors.
# This part needs modification based on how your data is structured.
# Let's say your location annotation is in mcc_tree$tip.label
locations <- unique(mcc_tree$tip.label)
# Plot the tree using ggtree
ggtree(mcc_tree, aes(color=max)) +
scale_color_manual(values = okabe_ito_scale) +
geom_tippoint(aes(color = max))  # Map the tip points' color to the location
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
ggtree(mcc_tree, aes(color=max)) +
scale_color_manual(values = okabe_ito_scale) +
geom_tippoint(aes(color = max))  # Map the tip points' color to the location
ggsave(plot=p, "tree.pdf")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
pwd()
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
ggsave(plot=p, width=4, height=2 "/Users/nmueller/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/tree.pdf")
ggsave(plot=p, width=4, height=2, "/Users/nmueller/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/tree.pdf")
ggsave(plot=p, width=8, height=2, "/Users/nmueller/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/tree.pdf")
ggsave(plot=p, width=7, height=2, "/Users/nmueller/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/tree.pdf")
ggsave(plot=p, width=5, height=2, "/Users/nmueller/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/tree.pdf")
p = ggtree(mcc_tree, aes(color=max)) +
scale_color_manual(values = okabe_ito_scale) +
theme(legend.position = "none")+
geom_tippoint(aes(color = max))  # Map the tip points' color to the location
ggsave(plot=p, width=4, height=2, "/Users/nmueller/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/tree.pdf")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
ggsave(plot=p, width=10, height=4, "/Users/nmueller/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/tree.pdf")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
# plot the effective population sizes over time
log = read.table(header=T, sep="\t",
"/Users/nmueller/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/precooked_runs/ZIKV.log"
)
log
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
max_tree_heigh
log$Tree.height
log$max_tree_heigh = max(log$Tree.height)
max_tree_heigh = max(log$Tree.height)
max_tree_height
max_tree_height = max(log$Tree.height)
max_tree_height = max(log$Tree.height)
max_tree_height
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
params = param.labels[startsWith(param.labels,
paste("SkylineNe.", locations[[i]], ".",sep=""))]
params = param_labels[startsWith(param_labels,
paste("SkylineNe.", locations[[i]], ".",sep=""))]
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
param_labels
param_labels[[2]]
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
# plot the skylines
p_skyline = ggplot(data=dat, aes(x=time, fill=location))+
geom_ribbon(aes(ymin=l.5, ymax=u.5), alpha=0.5)+
geom_ribbon(aes(ymin=l.95, ymax=u.95), alpha=0.5)+
scale_color_manual(values = okabe_ito_scale)
plot(p_skyline)
okabe_ito_scale
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
okabe_ito_scale
p_skyline = ggplot(data=dat, aes(x=time, fill=location))+
geom_ribbon(aes(ymin=l.5, ymax=u.5), alpha=0.5)+
geom_ribbon(aes(ymin=l.95, ymax=u.95), alpha=0.5)+
scale_fill_manual(okabe_ito_scale)
p_skyline = ggplot(data=dat, aes(x=time, fill=location))+
geom_ribbon(aes(ymin=l.5, ymax=u.5), alpha=0.5)+
geom_ribbon(aes(ymin=l.95, ymax=u.95), alpha=0.5)+
scale_fill_manual(okabe_ito_scale)
plot(p_skyline)
okabe_ito_scale
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
dat$location
unique(dat$location)
okabe_ito_scale <- c("Caribbean"="#0072B2", "Brazil_Northeast"="#D55E00")
# plot the skylines
p_skyline = ggplot(data=dat, aes(x=time, fill=location))+
geom_ribbon(aes(ymin=l.5, ymax=u.5), alpha=0.5)+
geom_ribbon(aes(ymin=l.95, ymax=u.95), alpha=0.5)+
scale_fill_manual(okabe_ito_scale)
plot(p_skyline)
okabe_ito_scale
# plot the skylines
p_skyline = ggplot(data=dat, aes(x=time, fill=location))+
geom_ribbon(aes(ymin=l.5, ymax=u.5), alpha=0.5)+
geom_ribbon(aes(ymin=l.95, ymax=u.95), alpha=0.5)+
scale_fill_manual(values=okabe_ito_scale)
plot(p_skyline)
source("~/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/Documents/github/MascotSkyline-Tutorial/plotTree.R")
